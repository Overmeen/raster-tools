[buildout]
index = http://packages.lizardsystem.nl
find-links =
unzip = true
prefer-final = true
socket-timeout = 1
show-picked-versions = true
extensions =
    mr.developer
parts =
#    sysegg
    test
    omelette
    console_scripts
    sphinx
    pydev
develop = .
eggs =
    raster-tools


[versions]
# Specific pins
raster-tools =

# Reported by buildout.
collective.recipe.omelette = 0.16
collective.recipe.sphinxbuilder = 0.8.2
coverage = 3.7.1
createcoverage = 1.2
docutils = 0.12
mr.developer = 1.31
pbp.recipe.noserunner = 0.2.6
pb.recipes.pydev = 0.4.5
pep8 = 1.5.7
pyflakes = 0.8.1
Pygments = 1.6
setuptools = 0.7
Sphinx = 1.2.3
zc.buildout = 2.2.5
zc.recipe.egg = 2.0.1
zest.releaser = 3.52


[sources]
# Examples:
# lizard-ui = git git@github.com:lizardsystem/nensskel.git
# lizard-ui = svn https://office.nelen-schuurmans.nl/svn/Products/djangoapps/lizard-ui/trunk


# [sysegg]
# # Add eggs here that are best handled through OS-level packages.
# recipe = osc.recipe.sysegg
# force-sysegg = true
# eggs =


[test]
recipe = pbp.recipe.noserunner
eggs =
    raster-tools
    raster-tools[test]
defaults = raster-tools


[omelette]
# Creates a nice parts/omelette with our used eggs
recipe = collective.recipe.omelette
eggs = ${buildout:eggs}


[console_scripts]
recipe = zc.recipe.egg
dependent-scripts = true
interpreter = python
eggs =
    ${buildout:eggs}
# Development tools
    createcoverage
    pep8
    pyflakes
    zest.releaser


[sphinx]
recipe = collective.recipe.sphinxbuilder
source = ${buildout:directory}/doc/source
build = ${buildout:directory}/doc/build
eggs = ${buildout:eggs}


[pydev]
recipe = pb.recipes.pydev
eggs = ${buildout:eggs}
pydevproject_path = ${buildout:directory}/.pydevproject
extra_paths =
